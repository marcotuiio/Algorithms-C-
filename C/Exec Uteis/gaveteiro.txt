Algoritmo

    função criaGaveteiro(numGavetas: inteiro): Gaveteiro
        pós-condição: cria um gaveteiro capaz de armazenar numGavetas gavetas, porém, sem
        nenhuma gaveta. Os espaços para as gavetas são numerados sequencialmente de 1 até
        numGavetas.

    procedimento gaveteiroAdicionaGaveta(gv: Gaveteiro, posicao: inteiro, q: tamanho, rotulo: string)
        pré-condição: 1 <= posicao <= capacidade(numGavetas)
        pós-condição: retornar uma gaveta na posição sequenciada para armazernar elementos 
        relacionados ao tipo da mesma
    
    função gavetaCheia(g: Gaveta): lógico
        pós-condição: gavetaEspacoDisponível(g) == 0

    procedimento gavetaInsere(gv: Gaveteiro, rotulo: quarto, v: QualquerTipo, n: qunatidade) : <T>
        pré-condição: não gavetaCheia(g)
        pós-condição: acrescentar algum elemento na gaveta   

    função gavetaVazia(g: Gaveta): lógico
        pós-condição: gavetaQuantidadeItens(g) == 0

    função gavetaRetira(gv: Gaveteiro, rotulo: quarto, v: QualquerTipo,  n: qunatidade) : <T>
        pré-condição: não gavetaVazia(g)
        pós-condição: retorna um item da gaveta, retirando-o. A quantidade de itens é decrescido de
        1.        

    main {

        tipo abstrato meia;
        tipo abstrato pijama;
        tipo abstrato roupa;
        tipo abstrato escova_de_dentes;
        tipo abstrato pasta_de_dentes;

        criaGaveteiro(5): GavQuarto;
        criaGaveteiro(5): GavBanheiro;
        criaGaveteiro(5): GavCozinha;

        gaveteiroAdicionaGaveta(GavQuarto, 1, 10, gavMeia);
        gaveteiroAdicionaGaveta(GavQuarto, 2, 5, gavPijama);
        gaveteiroAdicionaGaveta(GavQuarto, 3, 5, gavRoupa);

        gaveteiroAdicionaGaveta(GavBanheiro, 1, 5, gavEscova);
        gaveteiroAdicionaGaveta(Gaveteiro, 2, 5, gavPasta);

        se (gavetaCheia(gavMeia) != 0)
            gavetaInsere(GavQuarto, gavMeia, meia, 4);

        se (gavetaCheia(gavPijama) != 0)    
            gavetaInsere(GavQuarto, gavPijama, pijama, 1);

        se (gavetaCheia(gavRoupa) != 0)    
            gavetaInsere(GavQuarto, GavRoupa, roupa, 3);

        se (gavetaCheia(gavEscova) != 0)
            gavetaInsere(GavBanheiro, gavEscova, escova_de_dentes, 1);

        se (gavetaCheia(gavPasta) != 0)    
            gavetaInsere(Gaveteiro, gavPasta, pasta_de_dentes, 2);

        se (gavetaVazia(gavEscova) != 0)    
            gavetaRetira(GavBanheiro, gavEscova, escova_de_dentes, 1);
    }

FimAlgoritmo        